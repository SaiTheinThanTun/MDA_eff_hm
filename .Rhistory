neg_assembly
pos_assembly
cmda_1Loop <- seq(10, by=10, to=90)
length(cmda_1Loop)
#extract the positive and negative assembly effects (areas) from the scenario analyses
#& make 2 plots
#x: MDA coverage in village1: from 10 to 90
#y: assembly effect (fig1: pos and neg separate, fig2: overall)
#20190527
setwd("~/OneDrive/MORU/Projects/TCE_MDA effect/MDA_eff_hm/")
cmda_1Loop <- seq(10, by=10, to=90)
pos_assembly <- NA
neg_assembly <- NA
for(i in 1:length(cmda_1Loop)){
result <- readRDS(paste0("results_homo_cov_start0_seas/results_loop_",i,".rds"))
village1 <- sapply(result, function(x){
(x[,2]<1)*1+(x[,2]>=1)*0
})
village2 <- sapply(result, function(x){
(x[,4]<1)*2+(x[,4]>=1)*0
})
#putting into matrix
#change 3
v1m <- matrix(as.numeric(village1),nrow=100,ncol=101, byrow=TRUE)
v2m <- matrix(as.numeric(village2),nrow=100,ncol=101, byrow=TRUE)
v12m <- matrix(as.numeric(village1),nrow=100,ncol=101, byrow=TRUE)+matrix(as.numeric(village2),nrow=100,ncol=101, byrow=TRUE)
# v1m <- matrix(as.numeric(village1),nrow=81,ncol=101, byrow=TRUE)
# v2m <- matrix(as.numeric(village2),nrow=81,ncol=101, byrow=TRUE)
# v12m <- matrix(as.numeric(village1),nrow=81,ncol=101, byrow=TRUE)+matrix(as.numeric(village2),nrow=81,ncol=101, byrow=TRUE)
#positive assembly effect####
pos_denominator <- nrow(v12m)*ncol(v12m)
if(length(which(v12m[,1]==3))==0){
pos_u_bound <- nrow(v12m)
} else{
pos_u_bound <- min(which(v12m[,1]==3))-1
}
if(length(which(v12m[,ncol(v12m)]==3))==0){
pos_l_bound <- 1
} else{
pos_l_bound <- min(which(v12m[,ncol(v12m)]==3))
}
pos_numerator <- sum(v12m[pos_l_bound:pos_u_bound,]==3)
pos_assembly[i] <- pos_numerator/pos_denominator
#negative assembly effect ####
neg_denominator <- nrow(v12m)*ncol(v12m)
if(length(which(v12m[,1]==2))==0){
neg_l_bound <- nrow(v12m)
} else{
neg_l_bound <- min(which(v12m[,1]==2))
}
if(length(which(v12m[,ncol(v12m)]==2))==0){
neg_u_bound <- 1
} else{
neg_u_bound <- min(which(v12m[,ncol(v12m)]==2))-1
}
neg_numerator <- sum(v12m[neg_l_bound:neg_u_bound,]==0)
neg_assembly[i] <- neg_numerator/neg_denominator
}
# toPlot <- melt(t(v12m))
# toPlot$value <- factor(toPlot$value, levels=c(0,1,2,3), labels=c("Zero","Village 1", "Village 2", "Both villages"))
#
# cmda_1 <- 10 #to change
# col_tmp <- data.frame(a=c(0,1,2,3), b=c("Zero","Village 1", "Village 2", "Both villages"))
# myColors <- c("#999999", "#E69F00", "#56B4E9", "#00008B")
# names(myColors) <- col_tmp$b #levels(col_tmp$b)
# colScale <- scale_fill_manual(name = "# of village",values = myColors)
#
# ggplot(data=toPlot, aes(x=X1, y=X2))+
#   #geom_tile(aes(fill=factor(value)))+
#   geom_tile(aes(fill=(value)))+
#   ggtitle(paste0("No. of village with less than 1 case/1000 at 1 year after MDA\nMDA coverage in village1: ",cmda_1))+
#   xlab("% of homogeneity")+ylab("% of MDA coverage in village 2")+
#   theme(legend.position = "bottom")+ colScale
pos_assembly
neg_assembly
#plot the results
#fig 1
plot(pos_assembly)
#plot the results
#fig 1
plot(pos_assembly, ylim = c(0,max(pos_assembly,neg_assembly)))
#fig 2
plot(pos_assembly-neg_assembly)
?plot
#plot the results
#fig 1
plot(pos_assembly, ylim = c(0,max(pos_assembly,neg_assembly)))
lines(neg_assembly)
#plot the results
#fig 1
plot(pos_assembly, ylim = c(0,max(pos_assembly,neg_assembly)), type = 'l',col="blue")
lines(neg_assembly, col='red')
#fig 2
plot(pos_assembly-neg_assembly, type = 'l')
#fig 2
plot(pos_assembly-neg_assembly, type = 'l', vline=0)
#fig 2
plot(pos_assembly-neg_assembly, type = 'l')
vline()
lines(h=0)
#fig 2
plot(pos_assembly-neg_assembly, type = 'l',h=0)
#fig 2
plot(pos_assembly-neg_assembly, type = 'l')
abline(h=0)
?legend
#plot the results
#fig 1
plot(pos_assembly, ylim = c(0,max(pos_assembly,neg_assembly)), type = 'l',col="blue", main = "Total area of assembly effect", xlab = "MDA coverage in village 1", ylab = "Assembly effect")
lines(neg_assembly, col='red')
legend(5,.7,legend = c("Positive assembly effect","Negative assembly effect"),col=c("blue","red"))
#fig 2
plot(pos_assembly-neg_assembly, type = 'l', main = "Net assembly effect", xlab = "MDA coverage in village 1", ylab = "Assembly effect")
abline(h=0)
#plot the results
#fig 1
plot(cmda1Loop,pos_assembly, ylim = c(0,max(pos_assembly,neg_assembly)), type = 'l',col="blue", main = "Total area of assembly effects", xlab = "MDA coverage in village 1", ylab = "Assembly effect")
#plot the results
#fig 1
plot(cmda_1Loop,pos_assembly, ylim = c(0,max(pos_assembly,neg_assembly)), type = 'l',col="blue", main = "Total area of assembly effects", xlab = "MDA coverage in village 1", ylab = "Assembly effect")
lines(neg_assembly, col='red')
legend(5,.7,legend = c("Positive","Negative"),col=c("blue","red"))
plot(cmda_1Loop, pos_assembly, ylim = c(0,max(pos_assembly,neg_assembly)), type = 'l',col="blue", main = "Total area of assembly effects", xlab = "MDA coverage in village 1", ylab = "Assembly effect")
lines(cmda_1Loop, neg_assembly, col='red')
legend(5,.7,legend = c("Positive","Negative"),col=c("blue","red"))
legend(50,.7,legend = c("Positive","Negative"),col=c("blue","red"))
plot(cmda_1Loop, pos_assembly, ylim = c(0,max(pos_assembly,neg_assembly)), type = 'l',col="blue", main = "Total area of assembly effects", xlab = "MDA coverage in village 1", ylab = "Assembly effect")
lines(cmda_1Loop, neg_assembly, col='red')
legend(50,.7, legend = c("Positive","Negative"), col=c("blue","red"), lty = 1)
#fig 2
plot(cmda_1Loop, pos_assembly-neg_assembly, type = 'l', main = "Net assembly effect", xlab = "MDA coverage in village 1", ylab = "Assembly effect")
abline(h=0)
png(paste('results_homo_cov_start0_seas/newPlot_OneYrInc/assemblyEffects_',gsub("\\:","",Sys.time()),'.png',sep=''),height= 1600, width=1800, units= "px", res=300)
plot(cmda_1Loop, pos_assembly, ylim = c(0,max(pos_assembly,neg_assembly)), type = 'l',col="blue", main = "Total area of assembly effects", xlab = "MDA coverage in village 1", ylab = "Assembly effect")
lines(cmda_1Loop, neg_assembly, col='red')
legend(50,.7, legend = c("Positive","Negative"), col=c("blue","red"), lty = 1)
dev.off()
#fig 2
png(paste('results_homo_cov_start0_seas/newPlot_OneYrInc/netAssemblyEffects_',gsub("\\:","",Sys.time()),'.png',sep=''),height= 1600, width=1800, units= "px", res=300)
plot(cmda_1Loop, pos_assembly-neg_assembly, type = 'l', main = "Net assembly effect", xlab = "MDA coverage in village 1", ylab = "Assembly effect")
abline(h=0)
dev.off()
#MDA_eff_homo_cov_forloop.R created only the RDS save files
#since one of the results doesn't have adequate rows
#each RDS file is read in and plotted individually
#to change the coloring to better represent achievement in separate village
#to think about low & high relative prevalence for additional 6 plots
setwd("~/OneDrive/MORU/Projects/TCE_MDA effect/MDA_eff_hm/") #mac
library(deSolve)
library(shiny)
library(TSA)
library(Rcpp)
library(stringr)
#library(lattice)
library(ggplot2)
library(reshape)
sourceCpp("functions/modGMS.cpp")
source("functions/no longer app.R")
tm_1 <- 9
timeVector <- read.csv('parameters/times.csv')
MDAstart <- which(timeVector==(2018+tm_1/12))
#change 1
# cmda_1Loop <- seq(70, by=10, to=90) # to=70)
# cmda_1Loop <- seq(0, by=10, to=90)
cmda_1Loop <- seq(10, by=10, to=90)
#successwithin <- 12 #6 #no longer used
#fixed color across categories in different dataset
col_tmp <- data.frame(a=c(0,1,2,3), b=c("Zero","Village 1", "Village 2", "Both villages"))
myColors <- c("#999999", "#E69F00", "#56B4E9", "#00008B")
names(myColors) <- col_tmp$b #levels(col_tmp$b)
colScale <- scale_fill_manual(name = "# of village",values = myColors)
#change 2
for(loop in 1:9){
# for(loop in 1:3){
# for(loop in 1:10){
result <- readRDS(paste("results_homo_cov_start0_seas/results_loop_", loop,".rds", sep="")) #default
# result <- readRDS(paste("results_homo_cov_start0_seas_village2highAPI/results_loop_", loop,".rds", sep="")) #highAPI
# result <- readRDS(paste("results_homo_cov_start0_seas_village2lowAPI/results_loop_", loop,".rds", sep="")) #lowAPI
#testing####
#loop <- 1
#result <- readRDS("results_homo_cov_start0/results_loop_1_2019-03-22 141427.rds")
#result <- readRDS("results_homo_cov/results_2019-02-14 150440.rds")
cmda_1 <- cmda_1Loop[loop]#80 #90
#how soon is the outcome?
#within the "successwithin" period####
village1 <- sapply(result, function(x){
(x[,2]<1)*1+(x[,2]>=1)*0
})
village2 <- sapply(result, function(x){
(x[,4]<1)*2+(x[,4]>=1)*0
})
#putting into matrix
#change 3
v1m <- matrix(as.numeric(village1),nrow=100,ncol=101, byrow=TRUE)
v2m <- matrix(as.numeric(village2),nrow=100,ncol=101, byrow=TRUE)
v12m <- matrix(as.numeric(village1),nrow=100,ncol=101, byrow=TRUE)+matrix(as.numeric(village2),nrow=100,ncol=101, byrow=TRUE)
# v1m <- matrix(as.numeric(village1),nrow=81,ncol=101, byrow=TRUE)
# v2m <- matrix(as.numeric(village2),nrow=81,ncol=101, byrow=TRUE)
# v12m <- matrix(as.numeric(village1),nrow=81,ncol=101, byrow=TRUE)+matrix(as.numeric(village2),nrow=81,ncol=101, byrow=TRUE)
toPlot <- melt(t(v12m))
toPlot$value <- factor(toPlot$value, levels=c(0,1,2,3), labels=c("Zero","Village 1", "Village 2", "Both villages"))
#within the "successwithin" period####
#change 3
png(paste('results_homo_cov_start0_seas/newPlot_OneYrInc/homogeniety_MDAcoverage_',cmda_1Loop[loop],"_",gsub("\\:","",Sys.time()),'.png',sep=''),height= 1600, width=1800, units= "px", res=300)
# png(paste('results_homo_cov_start0_seas_village2highAPI/newPlot_OneYrInc/homogeniety_MDAcoverage_hiAPI',cmda_1Loop[loop],"_",gsub("\\:","",Sys.time()),'.png',sep=''),height= 1600, width=1800, units= "px", res=300) #highAPI
# png(paste('results_homo_cov_start0_seas_village2lowAPI/newPlot_OneYrInc/homogeniety_MDAcoverage_loAPI',cmda_1Loop[loop],"_",gsub("\\:","",Sys.time()),'.png',sep=''),height= 1600, width=1800, units= "px", res=300) #lowAPI
#at exactly "successwithin" from MDA start####
#png(paste('results_homo_cov_start0/newPlot_exactlyAt1Yr/homogeniety_MDAcoverage_',cmda_1Loop[loop],"_",gsub("\\:","",Sys.time()),'.png',sep=''),height= 1600, width=1800, units= "px", res=300)
print(
ggplot(data=toPlot, aes(x=X1, y=X2))+
#geom_tile(aes(fill=factor(value)))+
geom_tile(aes(fill=(value)))+
ggtitle(paste0("No. of village with less than 1 case/1000 at 1 year after MDA\nMDA coverage in village1: ",cmda_1))+
xlab("% of homogeneity")+ylab("% of MDA coverage in village 2")+
theme(legend.position = "bottom")+ colScale
#scale_fill_manual(name="# of village", labels=c("zero", "Village 1","Village 2", "Both villages"),values=c("#999999", "#E69F00", "#56B4E9", "#00008B"))
#scale_fill_manual(name="# of village", values=c("#999999", "#E69F00", "#56B4E9", "#00008B"))
)
dev.off()
}
neg_assembly
pos_assembly
install.packages("rsympy")
#extract the positive and negative assembly effects (areas) from the scenario analyses
#& make 2 plots
#x: MDA coverage in village1: from 10 to 90
#y: assembly effect (fig1: pos and neg separate, fig2: overall)
#20190527
setwd("~/OneDrive/MORU/Projects/TCE_MDA effect/MDA_eff_hm/")
i <- 1
cmda_1Loop <- seq(10, by=10, to=90)
pos_assembly <- NA
neg_assembly <- NA
result <- readRDS(paste0("results_homo_cov_start0_seas/results_loop_",i,".rds"))
village1 <- sapply(result, function(x){
(x[,2]<1)*1+(x[,2]>=1)*0
})
village2 <- sapply(result, function(x){
(x[,4]<1)*2+(x[,4]>=1)*0
})
#putting into matrix
#change 3
v1m <- matrix(as.numeric(village1),nrow=100,ncol=101, byrow=TRUE)
v2m <- matrix(as.numeric(village2),nrow=100,ncol=101, byrow=TRUE)
v12m <- matrix(as.numeric(village1),nrow=100,ncol=101, byrow=TRUE)+matrix(as.numeric(village2),nrow=100,ncol=101, byrow=TRUE)
# v1m <- matrix(as.numeric(village1),nrow=81,ncol=101, byrow=TRUE)
# v2m <- matrix(as.numeric(village2),nrow=81,ncol=101, byrow=TRUE)
# v12m <- matrix(as.numeric(village1),nrow=81,ncol=101, byrow=TRUE)+matrix(as.numeric(village2),nrow=81,ncol=101, byrow=TRUE)
#positive assembly effect####
pos_denominator <- nrow(v12m)*ncol(v12m)
if(length(which(v12m[,1]==3))==0){
pos_u_bound <- nrow(v12m)
} else{
pos_u_bound <- min(which(v12m[,1]==3))-1
}
if(length(which(v12m[,ncol(v12m)]==3))==0){
pos_l_bound <- 1
} else{
pos_l_bound <- min(which(v12m[,ncol(v12m)]==3))
}
pos_numerator <- sum(v12m[pos_l_bound:pos_u_bound,]==3)
pos_assembly[i] <- pos_numerator/pos_denominator
#negative assembly effect ####
neg_denominator <- nrow(v12m)*ncol(v12m)
if(length(which(v12m[,1]==2))==0){
neg_l_bound <- nrow(v12m)
} else{
neg_l_bound <- min(which(v12m[,1]==2))
}
if(length(which(v12m[,ncol(v12m)]==2))==0){
neg_u_bound <- 1
} else{
neg_u_bound <- min(which(v12m[,ncol(v12m)]==2))-1
}
neg_numerator <- sum(v12m[neg_l_bound:neg_u_bound,]==0)
neg_assembly[i] <- neg_numerator/neg_denominator
neg_assembly
cmda_1 <- 10 #to change
col_tmp <- data.frame(a=c(0,1,2,3), b=c("Zero","Village 1", "Village 2", "Both villages"))
myColors <- c("#999999", "#E69F00", "#56B4E9", "#00008B")
names(myColors) <- col_tmp$b #levels(col_tmp$b)
colScale <- scale_fill_manual(name = "# of village",values = myColors)
ggplot(data=toPlot, aes(x=X1, y=X2))+
#geom_tile(aes(fill=factor(value)))+
geom_tile(aes(fill=(value)))+
ggtitle(paste0("No. of village with less than 1 case/1000 at 1 year after MDA\nMDA coverage in village1: ",cmda_1))+
xlab("% of homogeneity")+ylab("% of MDA coverage in village 2")+
theme(legend.position = "bottom")+ colScale
cmda_1 <- cmda_1Loop[loop]#80 #90
#how soon is the outcome?
#within the "successwithin" period####
village1 <- sapply(result, function(x){
(x[,2]<1)*1+(x[,2]>=1)*0
})
village2 <- sapply(result, function(x){
(x[,4]<1)*2+(x[,4]>=1)*0
})
#putting into matrix
#change 3
v1m <- matrix(as.numeric(village1),nrow=100,ncol=101, byrow=TRUE)
v2m <- matrix(as.numeric(village2),nrow=100,ncol=101, byrow=TRUE)
v12m <- matrix(as.numeric(village1),nrow=100,ncol=101, byrow=TRUE)+matrix(as.numeric(village2),nrow=100,ncol=101, byrow=TRUE)
# v1m <- matrix(as.numeric(village1),nrow=81,ncol=101, byrow=TRUE)
# v2m <- matrix(as.numeric(village2),nrow=81,ncol=101, byrow=TRUE)
# v12m <- matrix(as.numeric(village1),nrow=81,ncol=101, byrow=TRUE)+matrix(as.numeric(village2),nrow=81,ncol=101, byrow=TRUE)
toPlot <- melt(t(v12m))
toPlot$value <- factor(toPlot$value, levels=c(0,1,2,3), labels=c("Zero","Village 1", "Village 2", "Both villages"))
ggplot(data=toPlot, aes(x=X1, y=X2))+
#geom_tile(aes(fill=factor(value)))+
geom_tile(aes(fill=(value)))+
ggtitle(paste0("No. of village with less than 1 case/1000 at 1 year after MDA\nMDA coverage in village1: ",cmda_1))+
xlab("% of homogeneity")+ylab("% of MDA coverage in village 2")+
theme(legend.position = "bottom")+ colScale
View(v12m)
neg_u_bound
neg_l_bound
result <- readRDS(paste0("results_homo_cov_start0_seas/results_loop_",i,".rds"))
village1 <- sapply(result, function(x){
(x[,2]<1)*1+(x[,2]>=1)*0
})
village2 <- sapply(result, function(x){
(x[,4]<1)*2+(x[,4]>=1)*0
})
#putting into matrix
#change 3
v1m <- matrix(as.numeric(village1),nrow=100,ncol=101, byrow=TRUE)
v2m <- matrix(as.numeric(village2),nrow=100,ncol=101, byrow=TRUE)
v12m <- matrix(as.numeric(village1),nrow=100,ncol=101, byrow=TRUE)+matrix(as.numeric(village2),nrow=100,ncol=101, byrow=TRUE)
# v1m <- matrix(as.numeric(village1),nrow=81,ncol=101, byrow=TRUE)
# v2m <- matrix(as.numeric(village2),nrow=81,ncol=101, byrow=TRUE)
# v12m <- matrix(as.numeric(village1),nrow=81,ncol=101, byrow=TRUE)+matrix(as.numeric(village2),nrow=81,ncol=101, byrow=TRUE)
#positive assembly effect####
pos_denominator <- nrow(v12m)*ncol(v12m)
if(length(which(v12m[,1]==3))==0){
pos_u_bound <- nrow(v12m)
} else{
pos_u_bound <- min(which(v12m[,1]==3))-1
}
if(length(which(v12m[,ncol(v12m)]==3))==0){
pos_l_bound <- 1
} else{
pos_l_bound <- min(which(v12m[,ncol(v12m)]==3))
}
pos_numerator <- sum(v12m[pos_l_bound:pos_u_bound,]==3)
pos_assembly[i] <- pos_numerator/pos_denominator
#negative assembly effect ####
neg_denominator <- nrow(v12m)*ncol(v12m)
if(length(which(v12m[,1]==2))==0){
neg_l_bound <- 1
} else{
neg_l_bound <- min(which(v12m[,1]==2))
}
if(length(which(v12m[,ncol(v12m)]==2))==0){
neg_u_bound <- nrow(v12m)
} else{
neg_u_bound <- min(which(v12m[,ncol(v12m)]==2))-1
}
neg_numerator <- sum(v12m[neg_l_bound:neg_u_bound,]==0)
neg_assembly[i] <- neg_numerator/neg_denominator
neg_assembly
#extract the positive and negative assembly effects (areas) from the scenario analyses
#& make 2 plots
#x: MDA coverage in village1: from 10 to 90
#y: assembly effect (fig1: pos and neg separate, fig2: overall)
#20190527
setwd("~/OneDrive/MORU/Projects/TCE_MDA effect/MDA_eff_hm/")
cmda_1Loop <- seq(10, by=10, to=90)
pos_assembly <- NA
neg_assembly <- NA
for(i in 1:length(cmda_1Loop)){
result <- readRDS(paste0("results_homo_cov_start0_seas/results_loop_",i,".rds"))
village1 <- sapply(result, function(x){
(x[,2]<1)*1+(x[,2]>=1)*0
})
village2 <- sapply(result, function(x){
(x[,4]<1)*2+(x[,4]>=1)*0
})
#putting into matrix
#change 3
v1m <- matrix(as.numeric(village1),nrow=100,ncol=101, byrow=TRUE)
v2m <- matrix(as.numeric(village2),nrow=100,ncol=101, byrow=TRUE)
v12m <- matrix(as.numeric(village1),nrow=100,ncol=101, byrow=TRUE)+matrix(as.numeric(village2),nrow=100,ncol=101, byrow=TRUE)
# v1m <- matrix(as.numeric(village1),nrow=81,ncol=101, byrow=TRUE)
# v2m <- matrix(as.numeric(village2),nrow=81,ncol=101, byrow=TRUE)
# v12m <- matrix(as.numeric(village1),nrow=81,ncol=101, byrow=TRUE)+matrix(as.numeric(village2),nrow=81,ncol=101, byrow=TRUE)
#positive assembly effect####
pos_denominator <- nrow(v12m)*ncol(v12m)
if(length(which(v12m[,1]==3))==0){
pos_u_bound <- nrow(v12m)
} else{
pos_u_bound <- min(which(v12m[,1]==3))-1
}
if(length(which(v12m[,ncol(v12m)]==3))==0){
pos_l_bound <- 1
} else{
pos_l_bound <- min(which(v12m[,ncol(v12m)]==3))
}
pos_numerator <- sum(v12m[pos_l_bound:pos_u_bound,]==3)
pos_assembly[i] <- pos_numerator/pos_denominator
#negative assembly effect ####
neg_denominator <- nrow(v12m)*ncol(v12m)
if(length(which(v12m[,1]==2))==0){
neg_l_bound <- 1
} else{
neg_l_bound <- min(which(v12m[,1]==2))
}
if(length(which(v12m[,ncol(v12m)]==2))==0){
neg_u_bound <- nrow(v12m)
} else{
neg_u_bound <- min(which(v12m[,ncol(v12m)]==2))-1
}
neg_numerator <- sum(v12m[neg_l_bound:neg_u_bound,]==0)
neg_assembly[i] <- neg_numerator/neg_denominator
}
#plot the results
#fig 1
png(paste('results_homo_cov_start0_seas/newPlot_OneYrInc/assemblyEffects_',gsub("\\:","",Sys.time()),'.png',sep=''),height= 1600, width=1800, units= "px", res=300)
plot(cmda_1Loop, pos_assembly, ylim = c(0,max(pos_assembly,neg_assembly)), type = 'l',col="blue", main = "Total area of assembly effects", xlab = "MDA coverage in village 1", ylab = "Assembly effect")
lines(cmda_1Loop, neg_assembly, col='red')
legend(50,.7, legend = c("Positive","Negative"), col=c("blue","red"), lty = 1)
dev.off()
#fig 2
png(paste('results_homo_cov_start0_seas/newPlot_OneYrInc/netAssemblyEffects_',gsub("\\:","",Sys.time()),'.png',sep=''),height= 1600, width=1800, units= "px", res=300)
plot(cmda_1Loop, pos_assembly-neg_assembly, type = 'l', main = "Net assembly effect", xlab = "MDA coverage in village 1", ylab = "Assembly effect")
abline(h=0)
dev.off()
# toPlot <- melt(t(v12m))
# toPlot$value <- factor(toPlot$value, levels=c(0,1,2,3), labels=c("Zero","Village 1", "Village 2", "Both villages"))
#
# cmda_1 <- 10 #to change
# col_tmp <- data.frame(a=c(0,1,2,3), b=c("Zero","Village 1", "Village 2", "Both villages"))
# myColors <- c("#999999", "#E69F00", "#56B4E9", "#00008B")
# names(myColors) <- col_tmp$b #levels(col_tmp$b)
# colScale <- scale_fill_manual(name = "# of village",values = myColors)
#
# ggplot(data=toPlot, aes(x=X1, y=X2))+
#   #geom_tile(aes(fill=factor(value)))+
#   geom_tile(aes(fill=(value)))+
#   ggtitle(paste0("No. of village with less than 1 case/1000 at 1 year after MDA\nMDA coverage in village1: ",cmda_1))+
#   xlab("% of homogeneity")+ylab("% of MDA coverage in village 2")+
#   theme(legend.position = "bottom")+ colScale
12500*50*80
43560*1250
43560*12500
12500*4000
43560*10000*(.9)
43560*10000*(.8)
43560*8000*(.8)
43560*8000*(.5)
500000000*.06/12
ui <- fluidPage(
sliderInput(inputId = "input1", label = "Slider label:")
)
runApp('~/OneDrive/DPhil/presentations/intro_shiny_R/sliderInput.R')
runApp('~/OneDrive/DPhil/presentations/intro_shiny_R/sliderInput.R')
runApp('~/OneDrive/DPhil/presentations/intro_shiny_R/sliderInput.R')
runApp('~/OneDrive/DPhil/presentations/intro_shiny_R/sliderInput.R')
runApp('~/OneDrive/DPhil/presentations/intro_shiny_R/sliderInput.R')
runApp('~/OneDrive/DPhil/presentations/intro_shiny_R/sliderInput.R')
runApp('~/OneDrive/DPhil/presentations/intro_shiny_R/sliderInput.R')
runApp('~/OneDrive/DPhil/presentations/intro_shiny_R/shinyTemplate.R')
runApp('~/OneDrive/DPhil/presentations/intro_shiny_R/shinyTemplate.R')
runApp('~/OneDrive/DPhil/presentations/intro_shiny_R/shinyTemplate.R')
fluidPage()
fluidPage("helloworld")
ui <- fluidPage(
"Histogram of n random numbers",
numericInput(inputId = "n", "Sample size", value = 25), plotOutput(outputId = "hist"),
renderPlot(outputId="histPlot")
)
hist(rnorm(input$n))
runApp('~/OneDrive/DPhil/presentations/intro_shiny_R/histogram_n_rno.R')
runApp('~/OneDrive/DPhil/presentations/intro_shiny_R/histogram_n_rno.R')
runApp('~/OneDrive/DPhil/presentations/intro_shiny_R/histogram_n_rno.R')
runApp('~/OneDrive/DPhil/presentations/intro_shiny_R/histogram_n_rno.R')
runApp('~/OneDrive/DPhil/presentations/intro_shiny_R/histogram_n_rno.R')
runApp('~/OneDrive/DPhil/presentations/intro_shiny_R/histogram_n_rno.R')
runApp('~/OneDrive/DPhil/presentations/intro_shiny_R/histogram_n_rno.R')
runApp('~/OneDrive/DPhil/presentations/intro_shiny_R/histogram_n_rno.R')
runApp('~/OneDrive/DPhil/presentations/intro_shiny_R/histogram_n_rno.R')
runApp('~/OneDrive/DPhil/presentations/intro_shiny_R/histogram_n_rno.R')
runApp('~/OneDrive/DPhil/presentations/intro_shiny_R/histogram_n_rno.R')
cls
list.file()
list.files()
tmp
tmp <- readRDS("results_homo_cov_start0_seas_village2lowAPI/results_loop_2.rds")
head(tmp)
result <- tmp
loop
loop <- 2
cmda_1 <- cmda_1Loop[loop]#80 #90
#how soon is the outcome?
#within the "successwithin" period####
village1 <- sapply(result, function(x){
(x[,2]<1)*1+(x[,2]>=1)*0
})
village2 <- sapply(result, function(x){
(x[,4]<1)*2+(x[,4]>=1)*0
})
#putting into matrix
#change 3
v1m <- matrix(as.numeric(village1),nrow=100,ncol=101, byrow=TRUE)
v2m <- matrix(as.numeric(village2),nrow=100,ncol=101, byrow=TRUE)
v12m <- matrix(as.numeric(village1),nrow=100,ncol=101, byrow=TRUE)+matrix(as.numeric(village2),nrow=100,ncol=101, byrow=TRUE)
# v1m <- matrix(as.numeric(village1),nrow=81,ncol=101, byrow=TRUE)
# v2m <- matrix(as.numeric(village2),nrow=81,ncol=101, byrow=TRUE)
# v12m <- matrix(as.numeric(village1),nrow=81,ncol=101, byrow=TRUE)+matrix(as.numeric(village2),nrow=81,ncol=101, byrow=TRUE)
v12m
View(v12m)
village1
head(tmp)
