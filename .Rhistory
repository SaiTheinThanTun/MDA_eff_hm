geom_tile(aes(fill=(value)))+
ggtitle(paste0("No. of village with less than 1 case/1000 within 1 year after MDA\nMDA coverage in village1: ",cmda_1))+
xlab("% of homogeniety")+ylab("% of MDA coverage in village 2")+
theme(legend.position = "bottom")+ colScale
#scale_fill_manual(name="# of village", labels=c("zero", "Village 1","Village 2", "Both villages"),values=c("#999999", "#E69F00", "#56B4E9", "#00008B"))
#scale_fill_manual(name="# of village", values=c("#999999", "#E69F00", "#56B4E9", "#00008B"))
)
dev.off()
}
colScale
ggplot(data=toPlot, aes(x=X1, y=X2))+
#geom_tile(aes(fill=factor(value)))+
geom_tile(aes(fill=(value)))+
ggtitle(paste0("No. of village with less than 1 case/1000 within 1 year after MDA\nMDA coverage in village1: ",cmda_1))+
xlab("% of homogeniety")+ylab("% of MDA coverage in village 2")+
theme(legend.position = "bottom")+ colScale
#MDA_eff_homo_cov_forloop.R created only the RDS save files
#since one of the results doesn't have adequate rows
#each RDS file is read in and plotted individually
#to change the coloring to better represent achievement in separate village
#to think about low & high relative prevalence for additional 6 plots
setwd("~/OneDrive/MORU/Projects/TCE_MDA effect/MDA_eff_hm/") #mac
library(deSolve)
library(shiny)
library(TSA)
library(Rcpp)
library(stringr)
#library(lattice)
library(ggplot2)
library(reshape)
sourceCpp("functions/modGMS.cpp")
source("functions/no longer app.R")
tm_1 <- 9
timeVector <- read.csv('parameters/times.csv')
MDAstart <- which(timeVector==(2018+tm_1/12))
#change 1
#cmda_1Loop <- seq(70, by=10, to=90) # to=70)
# cmda_1Loop <- seq(0, by=10, to=90)
cmda_1Loop <- seq(10, by=10, to=90)
successwithin <- 12 #6 #no longer used
#fixed color across categories in different dataset
col_tmp <- data.frame(a=c(0,1,2,3), b=c("Zero","Village 1", "Village 2", "Both villages"))
myColors <- c("#999999", "#E69F00", "#56B4E9", "#00008B")
names(myColors) <- levels(col_tmp$b)
colScale <- scale_fill_manual(name = "grp",values = myColors)
#change 2
for(loop in 1:9){
# for(loop in 1:10){
result <- readRDS(paste("results_homo_cov_start0_seas/results_loop_", loop,".rds", sep=""))
#testing####
#loop <- 1
#result <- readRDS("results_homo_cov_start0/results_loop_1_2019-03-22 141427.rds")
#result <- readRDS("results_homo_cov/results_2019-02-14 150440.rds")
cmda_1 <- cmda_1Loop[loop]#80 #90
#how soon is the outcome?
#within the "successwithin" period####
village1 <- sapply(result, function(x){
(x[,2]<1)*1+(x[,2]>=1)*0
})
village2 <- sapply(result, function(x){
(x[,4]<1)*2+(x[,4]>=1)*0
})
#putting into matrix
#change 3
v1m <- matrix(as.numeric(village1),nrow=100,ncol=101, byrow=TRUE)
v2m <- matrix(as.numeric(village2),nrow=100,ncol=101, byrow=TRUE)
v12m <- matrix(as.numeric(village1),nrow=100,ncol=101, byrow=TRUE)+matrix(as.numeric(village2),nrow=100,ncol=101, byrow=TRUE)
# v1m <- matrix(as.numeric(village1),nrow=81,ncol=101, byrow=TRUE)
# v2m <- matrix(as.numeric(village2),nrow=81,ncol=101, byrow=TRUE)
# v12m <- matrix(as.numeric(village1),nrow=81,ncol=101, byrow=TRUE)+matrix(as.numeric(village2),nrow=81,ncol=101, byrow=TRUE)
toPlot <- melt(t(v12m))
toPlot$value <- factor(toPlot$value, levels=c(0,1,2,3), labels=c("Zero","Village 1", "Village 2", "Both villages"))
#within the "successwithin" period####
png(paste('results_homo_cov_start0_seas/newPlot_OneYrInc/homogeniety_MDAcoverage_',cmda_1Loop[loop],"_",gsub("\\:","",Sys.time()),'.png',sep=''),height= 1600, width=1800, units= "px", res=300)
#at exactly "successwithin" from MDA start####
#png(paste('results_homo_cov_start0/newPlot_exactlyAt1Yr/homogeniety_MDAcoverage_',cmda_1Loop[loop],"_",gsub("\\:","",Sys.time()),'.png',sep=''),height= 1600, width=1800, units= "px", res=300)
print(
ggplot(data=toPlot, aes(x=X1, y=X2))+
#geom_tile(aes(fill=factor(value)))+
geom_tile(aes(fill=(value)))+
ggtitle(paste0("No. of village with less than 1 case/1000 within 1 year after MDA\nMDA coverage in village1: ",cmda_1))+
xlab("% of homogeniety")+ylab("% of MDA coverage in village 2")+
theme(legend.position = "bottom")+ colScale
#scale_fill_manual(name="# of village", labels=c("zero", "Village 1","Village 2", "Both villages"),values=c("#999999", "#E69F00", "#56B4E9", "#00008B"))
#scale_fill_manual(name="# of village", values=c("#999999", "#E69F00", "#56B4E9", "#00008B"))
)
dev.off()
}
?levels
levels(myColors)
myColors
#MDA_eff_homo_cov_forloop.R created only the RDS save files
#since one of the results doesn't have adequate rows
#each RDS file is read in and plotted individually
#to change the coloring to better represent achievement in separate village
#to think about low & high relative prevalence for additional 6 plots
setwd("~/OneDrive/MORU/Projects/TCE_MDA effect/MDA_eff_hm/") #mac
library(deSolve)
library(shiny)
library(TSA)
library(Rcpp)
library(stringr)
#library(lattice)
library(ggplot2)
library(reshape)
sourceCpp("functions/modGMS.cpp")
source("functions/no longer app.R")
tm_1 <- 9
timeVector <- read.csv('parameters/times.csv')
MDAstart <- which(timeVector==(2018+tm_1/12))
#change 1
#cmda_1Loop <- seq(70, by=10, to=90) # to=70)
# cmda_1Loop <- seq(0, by=10, to=90)
cmda_1Loop <- seq(10, by=10, to=90)
successwithin <- 12 #6 #no longer used
#fixed color across categories in different dataset
col_tmp <- data.frame(a=c(0,1,2,3), b=c("Zero","Village 1", "Village 2", "Both villages"))
myColors <- c("#999999", "#E69F00", "#56B4E9", "#00008B")
names(myColors) <- col_tmp$b #levels(col_tmp$b)
colScale <- scale_fill_manual(name = "# of village",values = myColors)
#change 2
for(loop in 1:9){
# for(loop in 1:10){
result <- readRDS(paste("results_homo_cov_start0_seas/results_loop_", loop,".rds", sep=""))
#testing####
#loop <- 1
#result <- readRDS("results_homo_cov_start0/results_loop_1_2019-03-22 141427.rds")
#result <- readRDS("results_homo_cov/results_2019-02-14 150440.rds")
cmda_1 <- cmda_1Loop[loop]#80 #90
#how soon is the outcome?
#within the "successwithin" period####
village1 <- sapply(result, function(x){
(x[,2]<1)*1+(x[,2]>=1)*0
})
village2 <- sapply(result, function(x){
(x[,4]<1)*2+(x[,4]>=1)*0
})
#putting into matrix
#change 3
v1m <- matrix(as.numeric(village1),nrow=100,ncol=101, byrow=TRUE)
v2m <- matrix(as.numeric(village2),nrow=100,ncol=101, byrow=TRUE)
v12m <- matrix(as.numeric(village1),nrow=100,ncol=101, byrow=TRUE)+matrix(as.numeric(village2),nrow=100,ncol=101, byrow=TRUE)
# v1m <- matrix(as.numeric(village1),nrow=81,ncol=101, byrow=TRUE)
# v2m <- matrix(as.numeric(village2),nrow=81,ncol=101, byrow=TRUE)
# v12m <- matrix(as.numeric(village1),nrow=81,ncol=101, byrow=TRUE)+matrix(as.numeric(village2),nrow=81,ncol=101, byrow=TRUE)
toPlot <- melt(t(v12m))
toPlot$value <- factor(toPlot$value, levels=c(0,1,2,3), labels=c("Zero","Village 1", "Village 2", "Both villages"))
#within the "successwithin" period####
png(paste('results_homo_cov_start0_seas/newPlot_OneYrInc/homogeniety_MDAcoverage_',cmda_1Loop[loop],"_",gsub("\\:","",Sys.time()),'.png',sep=''),height= 1600, width=1800, units= "px", res=300)
#at exactly "successwithin" from MDA start####
#png(paste('results_homo_cov_start0/newPlot_exactlyAt1Yr/homogeniety_MDAcoverage_',cmda_1Loop[loop],"_",gsub("\\:","",Sys.time()),'.png',sep=''),height= 1600, width=1800, units= "px", res=300)
print(
ggplot(data=toPlot, aes(x=X1, y=X2))+
#geom_tile(aes(fill=factor(value)))+
geom_tile(aes(fill=(value)))+
ggtitle(paste0("No. of village with less than 1 case/1000 within 1 year after MDA\nMDA coverage in village1: ",cmda_1))+
xlab("% of homogeniety")+ylab("% of MDA coverage in village 2")+
theme(legend.position = "bottom")+ colScale
#scale_fill_manual(name="# of village", labels=c("zero", "Village 1","Village 2", "Both villages"),values=c("#999999", "#E69F00", "#56B4E9", "#00008B"))
#scale_fill_manual(name="# of village", values=c("#999999", "#E69F00", "#56B4E9", "#00008B"))
)
dev.off()
}
#MDA_eff_homo_cov_forloop.R created only the RDS save files
#since one of the results doesn't have adequate rows
#each RDS file is read in and plotted individually
setwd("~/OneDrive/MORU/Projects/TCE_MDA effect/MDA_eff_hm/") #mac
library(deSolve)
library(shiny)
library(TSA)
library(Rcpp)
library(stringr)
#library(lattice)
library(ggplot2)
library(reshape)
sourceCpp("functions/modGMS.cpp")
source("functions/no longer app.R")
timeVector <- read.csv('parameters/times.csv')
homoLoop <- seq(0, by=10, to=100) # to=70)
#fixed color across categories in different dataset
col_tmp <- data.frame(a=c(0,1,2,3), b=c("Zero","Village 1", "Village 2", "Both villages"))
myColors <- c("#999999", "#E69F00", "#56B4E9", "#00008B")
names(myColors) <- col_tmp$b #levels(col_tmp$b)
colScale <- scale_fill_manual(name = "# of village",values = myColors)
#tmp2 <- NA
for(loop in 1:11){
result <- readRDS(paste("results_covV12_bh_maxV2_homo/results_loop_", loop,".rds", sep=""))
#testing####
#loop <- 1
#result <- readRDS("results_homo_cov_start0/results_loop_1_2019-03-22 141427.rds")
#result <- readRDS("results_homo_cov/results_2019-02-14 150440.rds")
#cmda_1 <- cmda_1Loop[loop]#80 #90
homogen <- homoLoop[loop]
#how soon is the outcome?
village1 <- sapply(result, function(x){
#x[,2]<1
(x[,2]<1)*1+(x[,2]>=1)*0
})
village2 <- sapply(result, function(x){
#x[,4]<1
(x[,4]<1)*2+(x[,4]>=1)*0
})
#putting into matrix
v1m <- matrix(as.numeric(village1),nrow=101,ncol=81, byrow=TRUE)
v2m <- matrix(as.numeric(village2),nrow=101,ncol=81, byrow=TRUE)
v12m <- matrix(as.numeric(village1),nrow=101,ncol=81, byrow=TRUE)+matrix(as.numeric(village2),nrow=101,ncol=81, byrow=TRUE)
v12m <- v12m[-101,] #MDA at 100% produces NA values, therefore it is removed
toPlot <- melt(t(v12m))
#within one year period####
png(paste('results_covV12_bh_maxV2_homo/newPlot_OneYrInc/HBR_MDAcoverage_atHomogen_',homoLoop[loop],"_",gsub("\\:","",Sys.time()),'.png',sep=''),height= 1600, width=1800, units= "px", res=300)
print(
ggplot(data=toPlot, aes(x=X1, y=X2))+
geom_tile(aes(fill=factor(value)))+
ggtitle(paste0("No. of village with less than 1 case/1000 within 1 year after MDA\nHBR in village 1: 16; % of homogeniety: ",homogen))+
xlab("HBR in village 2")+ylab("% of MDA coverage in both villages")+
theme(legend.position = "bottom")+ colScale
#scale_fill_manual(name="# of village", labels=c("zero", "one village", "two villages"),values=c("#999999", "#E69F00", "#56B4E9"))
)
dev.off()
}
#MDA_eff_homo_cov_forloop.R created only the RDS save files
#since one of the results doesn't have adequate rows
#each RDS file is read in and plotted individually
setwd("~/OneDrive/MORU/Projects/TCE_MDA effect/MDA_eff_hm/") #mac
library(deSolve)
library(shiny)
library(TSA)
library(Rcpp)
library(stringr)
#library(lattice)
library(ggplot2)
library(reshape)
sourceCpp("functions/modGMS.cpp")
source("functions/no longer app.R")
timeVector <- read.csv('parameters/times.csv')
homoLoop <- seq(0, by=10, to=100) # to=70)
#fixed color across categories in different dataset
col_tmp <- data.frame(a=c(0,1,2,3), b=c("Zero","Village 1", "Village 2", "Both villages"))
myColors <- c("#999999", "#E69F00", "#56B4E9", "#00008B")
names(myColors) <- col_tmp$b #levels(col_tmp$b)
colScale <- scale_fill_manual(name = "# of village",values = myColors)
#tmp2 <- NA
for(loop in 1:11){
result <- readRDS(paste("results_covV12_bh_maxV2_homo/results_loop_", loop,".rds", sep=""))
#testing####
#loop <- 1
#result <- readRDS("results_homo_cov_start0/results_loop_1_2019-03-22 141427.rds")
#result <- readRDS("results_homo_cov/results_2019-02-14 150440.rds")
#cmda_1 <- cmda_1Loop[loop]#80 #90
homogen <- homoLoop[loop]
#how soon is the outcome?
village1 <- sapply(result, function(x){
#x[,2]<1
(x[,2]<1)*1+(x[,2]>=1)*0
})
village2 <- sapply(result, function(x){
#x[,4]<1
(x[,4]<1)*2+(x[,4]>=1)*0
})
#putting into matrix
v1m <- matrix(as.numeric(village1),nrow=101,ncol=81, byrow=TRUE)
v2m <- matrix(as.numeric(village2),nrow=101,ncol=81, byrow=TRUE)
v12m <- matrix(as.numeric(village1),nrow=101,ncol=81, byrow=TRUE)+matrix(as.numeric(village2),nrow=101,ncol=81, byrow=TRUE)
v12m <- v12m[-101,] #MDA at 100% produces NA values, therefore it is removed
toPlot <- melt(t(v12m))
toPlot$value <- factor(toPlot$value, levels=c(0,1,2,3), labels=c("Zero","Village 1", "Village 2", "Both villages"))
#within one year period####
png(paste('results_covV12_bh_maxV2_homo/newPlot_OneYrInc/HBR_MDAcoverage_atHomogen_',homoLoop[loop],"_",gsub("\\:","",Sys.time()),'.png',sep=''),height= 1600, width=1800, units= "px", res=300)
print(
ggplot(data=toPlot, aes(x=X1, y=X2))+
geom_tile(aes(fill=factor(value)))+
ggtitle(paste0("No. of village with less than 1 case/1000 within 1 year after MDA\nHBR in village 1: 16; % of homogeniety: ",homogen))+
xlab("HBR in village 2")+ylab("% of MDA coverage in both villages")+
theme(legend.position = "bottom")+ colScale
#scale_fill_manual(name="# of village", labels=c("zero", "one village", "two villages"),values=c("#999999", "#E69F00", "#56B4E9"))
)
dev.off()
}
shiny::runApp('~/OneDrive/MORU/Projects/TCE_MDA effect/testing_RAI_v11')
#HBR analysis
library(ggplot2)
setwd("~/OneDrive/MORU/Projects/TCE_MDA effect/MDA_eff_hm/HBR data/")
hbr <- read.csv("hbr_20170914.csv")
names(hbr)
#1 "Village"   2"Survey"    3"Site"      4"HBR"       5"survMaggr" 6"CatchSite"
head(hbr)
plot(hbr$CatchSite,hbr$HBR)
hbr[grepl("TOT" ,hbr$CatchSite),]
ggplot(hbr[hbr$Village=="TOT",], aes(x=Survey, y=HBR,col=CatchSite))+
geom_line()
ggplot(TOT,aes(x=Survey, y=HBR))+
geom_boxplot()
TOT <- hbr[hbr$Village=="TOT",]
ggplot(TOT,aes(x=Survey, y=HBR))+
geom_boxplot()
ggplot(TOT,aes(x=Survey, y=HBR))+
geom_boxplot(aes(group=Survey))
png("HBR_overtime_TOT.png")
ggplot(hbr[hbr$Village=="TOT",], aes(x=Survey, y=HBR,col=CatchSite))+
geom_line()
dev.off()
runApp('~/OneDrive/MORU/Projects/TCE_MDA effect/testing_RAI_v11')
####non-reactive functions####
#got from the "parameters" folder #scenario
#cmda_1Loop <- seq(70, by=10, to=90) #1st batch 20190407
# cmda_1Loop <- seq(30, by=10, to=60) #2nd batch 20190409
#cmda_1Loop <- seq(10, by=10, to=20) #3rd batch 20190409
cmda_1Loop <- seq(70, by=10, to=90) #20190522
cmda_1Loop
tot
TOT
16*.5
16*1.5
#for loop for changing MDA coverage in the first village
#MDA_eff_hm
#MDA success on homogeniety vs coverage
#20190405
#outcome is the achievement of <1/1000/year in a year starting with the end of the 3rd MDA round
#see #scenario tag for things to change in each scenario
#x axis variable: homogen, [0 to 100] %
#y axis variable: cmda_2, [0 to 80] %, coverage of MDA in second village
#z: cmda_1, [70, 80, 90] %
setwd("~/OneDrive/MORU/Projects/TCE_MDA effect/MDA_eff_hm/") #mac
library(deSolve)
library(shiny)
library(TSA)
library(Rcpp)
library(stringr)
library(lattice)
sourceCpp("functions/modGMS_seas.cpp")
source("functions/no longer app.R")
timeVector <- read.csv('parameters/times.csv') #to figure out when the MDA finishes
#scenario
##initialize input and output storage####
testfor2j <- rep(0:100,100) #homogen
testfor2i <- rep(0:99,each=101) #cmda_2
testfor2 <- cbind(testfor2j,testfor2i)
# colnames(testfor2) <- c('homogen','cmda_2')
colnames(testfor2) <- NULL
#scenario
####for template####
# for(i in 1:81){
#   for(j in 1:101){
#     homogen <- testfor2[((i-1)*101)+j,1]
#     cmda_2 <- testfor2[((i-1)*101)+j,2]
#     ###other codes for running the model
#     result[[((i-1)*101)+j]] <- successMDA
#   }
# }
####non-reactive parameters####
####interventions####
EDATon = TRUE
ITNon = TRUE
IRSon = FALSE
MDAon = TRUE
primon = TRUE #FALSE
MSATon = TRUE
VACon = FALSE
####non-reactive functions####
#got from the "parameters" folder #scenario
#cmda_1Loop <- seq(70, by=10, to=90) #1st batch 20190407
# cmda_1Loop <- seq(30, by=10, to=60) #2nd batch 20190409
#cmda_1Loop <- seq(10, by=10, to=20) #3rd batch 20190409
cmda_1Loop <- seq(70, by=10, to=90) #20190522
for(loop in 1:length(cmda_1Loop)){
result <- list()
API <- 2.5
eta <- 30
covEDAT0 <- 25
covITN0 <- 70
effITN <- 30
covIRS0 <- 0
effIRS <- 15
muC <- 1
muA <- 1
muU <- 1
percfail2018 <- 5
percfail2019 <- 15
percfail2020 <- 30
bh_max0 <- 16
bh_max1 <- 24 #16
rhoa <- 55
rhou <- 17
EDATscale <- 1
covEDATi <- 70
ITNscale <- 1
covITNi <- 90
IRSscale <- 1
covIRSi <- 90
lossd <- 30
dm0 <- 3
dm1 <- 3
cmda_1 <- cmda_1Loop[loop]#80 #90
#cmda_2 <- 50 #scenario
#homogen <- 0 #scenario
tm_1 <- 9
tm_2 <- 9
p1v <- 0.5
effv_1 <- 75
effv_2 <- 80
vh <- 90
MSATscale <- 1
covMSATi <- 90
MSATsensC <- 99
MSATsensA <- 87
MSATsensU <- 44
#non-reactive parameters
# define the number of weeks to run the model
dt<-1/12
startyear<-2007
stopyear<-2023
maxt<-stopyear-startyear
times <- seq(0, maxt, by = dt)
tsteps<-length(times)
# initial prevalence
initprevR <- (0.001*API)
#ParLabel <- read.table('functions/ParLabel.csv', sep=",", as.is=TRUE)
# scenario_0<-c(EDATon = 0,
#               ITNon = 0,
#               IRSon = 0,
#               MDAon = 0,
#               primon = 0,
#               MSATon = 0,
#               VACon = 0)
####for loop#####
for(i in 1:100){
for(j in 1:101){
homogen <- testfor2[((i-1)*101)+j,1]
cmda_2 <- testfor2[((i-1)*101)+j,2]
###other codes for running the model
scenario_iR<-(c(EDATon = EDATon,
ITNon = ITNon,
IRSon = IRSon,
MDAon = MDAon,
primon = primon,
MSATon = MSATon,
VACon = as.numeric(VACon)))
parametersR <- (c(
bh_max0 = bh_max0,                 # bites per human per night
bh_max1 = bh_max1,
eta = eta,
covEDAT0 = covEDAT0,
covITN0 = covITN0,
effITN = effITN,
covIRS0 = covIRS0,
effIRS = effIRS,
muC = muC,
muA = muA,
muU = muU,
percfail2018 = percfail2018,
percfail2019 = percfail2019,
percfail2020 = percfail2020,
EDATscale = EDATscale,
covEDATi = covEDATi,
ITNscale = ITNscale,
covITNi = covITNi,
IRSscale = IRSscale,
covIRSi = covIRSi,
cmda_1 = cmda_1,
cmda_2 = cmda_2,
tm_1 = tm_1,          # timing of 1st round [2018 to 2021 - 1 month steps]
tm_2 = tm_2,          # timing of 2nd round [2018+(1/12) to 2021 - 1 month steps]
dm0 = dm0,
dm1 = dm1,
lossd = lossd,
MSATscale = MSATscale,
covMSATi = covMSATi,
MSATsensC = MSATsensC,
MSATsensA = MSATsensA,
MSATsensU = MSATsensU,
effv_1 = effv_1,
effv_2 = effv_2,
vh = vh,
homogen = homogen,
p1v = p1v,
rhoa=rhoa,
rhou=rhou
))
#GMSout0R <- (runGMS(initprevR, scenario_0,parametersR))
GMSoutiR <- (runGMS(initprevR, scenario_iR,parametersR))
#labeling the columns
outLab <- c("year","detectedIncidence1","totalIncidence1","prevalence1","detectedIncidence2","totalIncidence2","prevalence2")
colnames(GMSoutiR) <- outLab
#grabbing the time of MDA success
#GMSoutiR[GMSoutiR[,3]<(1/12),1]
# MDAsuccessV1 <- GMSoutiR[,3]<(1/12)
# MDAsuccessV2 <- GMSoutiR[,6]<(1/12)
# successMDA <- cbind(MDAsuccessV1, MDAsuccessV2)
#calculating one year incidence per 1000 immediately after the end of MDA
MDAendsV1 <- which(timeVector==(2018+(tm_1+dm0)/12))
MDAendsV2 <- which(timeVector==(2018+(tm_2+dm1)/12))
DecOneYrIncV1 <- sum(GMSoutiR[MDAendsV1:(MDAendsV1+12),2])
TotOneYrIncV1 <- sum(GMSoutiR[MDAendsV1:(MDAendsV1+12),3])
DecOneYrIncV2 <- sum(GMSoutiR[MDAendsV2:(MDAendsV2+12),5])
TotOneYrIncV2 <- sum(GMSoutiR[MDAendsV2:(MDAendsV2+12),6])
OneYrInc <- cbind(DecOneYrIncV1, TotOneYrIncV1, DecOneYrIncV2, TotOneYrIncV2)
result[[((i-1)*101)+j]] <- OneYrInc  #successMDA
}
}
#time component #scenario
#outside of 'for' loop
#write.table(GMSoutiR[,1],'parameters/times.csv', col.names = 'time', row.names = FALSE)
#saveRDS(result, paste('results_homo_cov/results_loop_',loop,"_",gsub("\\:","",Sys.time()),'.rds',sep=''))
#saveRDS(result, paste('results_homo_cov_start0_seas/results_loop_',loop,"_",gsub("\\:","",Sys.time()),'.rds',sep='')) #default HBR_MAX: 16
saveRDS(result, paste('results_homo_cov_start0_seas_village2highAPI/results_loop_',loop,"_",gsub("\\:","",Sys.time()),'.rds',sep='')) #hbr_max2: 24, highAPI
#saveRDS(result, paste('results_homo_cov_start0_seas_village2lowAPI/results_loop_',loop,"_",gsub("\\:","",Sys.time()),'.rds',sep='')) #hbr_max2: 8, lowAPI
#with seasonality on [switch is inside modGMS.cpp]
#saveRDS(result, paste('results_homo_cov_start0_seas/results_loop_',loop,"_",gsub("\\:","",Sys.time()),'.rds',sep=''))
#scenario
#Analysing the data list 'results_.rds'####
#in different plotting file
}
